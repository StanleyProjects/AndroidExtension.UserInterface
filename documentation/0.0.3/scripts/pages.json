[{"name":"GONE()","description":"sp.ax.ui.entity.Visibility.GONE","location":"-android-extension.-user-interface/sp.ax.ui.entity/-visibility/-g-o-n-e/index.html","searchKeys":["GONE","GONE()","sp.ax.ui.entity.Visibility.GONE"]},{"name":"INVISIBLE()","description":"sp.ax.ui.entity.Visibility.INVISIBLE","location":"-android-extension.-user-interface/sp.ax.ui.entity/-visibility/-i-n-v-i-s-i-b-l-e/index.html","searchKeys":["INVISIBLE","INVISIBLE()","sp.ax.ui.entity.Visibility.INVISIBLE"]},{"name":"VISIBLE()","description":"sp.ax.ui.entity.Visibility.VISIBLE","location":"-android-extension.-user-interface/sp.ax.ui.entity/-visibility/-v-i-s-i-b-l-e/index.html","searchKeys":["VISIBLE","VISIBLE()","sp.ax.ui.entity.Visibility.VISIBLE"]},{"name":"abstract val bottom: Int","description":"sp.ax.ui.entity.Padding.bottom","location":"-android-extension.-user-interface/sp.ax.ui.entity/-padding/bottom.html","searchKeys":["bottom","abstract val bottom: Int","sp.ax.ui.entity.Padding.bottom"]},{"name":"abstract val left: Int","description":"sp.ax.ui.entity.Padding.left","location":"-android-extension.-user-interface/sp.ax.ui.entity/-padding/left.html","searchKeys":["left","abstract val left: Int","sp.ax.ui.entity.Padding.left"]},{"name":"abstract val right: Int","description":"sp.ax.ui.entity.Padding.right","location":"-android-extension.-user-interface/sp.ax.ui.entity/-padding/right.html","searchKeys":["right","abstract val right: Int","sp.ax.ui.entity.Padding.right"]},{"name":"abstract val top: Int","description":"sp.ax.ui.entity.Padding.top","location":"-android-extension.-user-interface/sp.ax.ui.entity/-padding/top.html","searchKeys":["top","abstract val top: Int","sp.ax.ui.entity.Padding.top"]},{"name":"enum Visibility : Enum<Visibility> ","description":"sp.ax.ui.entity.Visibility","location":"-android-extension.-user-interface/sp.ax.ui.entity/-visibility/index.html","searchKeys":["Visibility","enum Visibility : Enum<Visibility> ","sp.ax.ui.entity.Visibility"]},{"name":"fun KClass<ViewGroup.LayoutParams>.matched(): ViewGroup.LayoutParams","description":"sp.ax.ui.view.group.matched","location":"-android-extension.-user-interface/sp.ax.ui.view.group/matched.html","searchKeys":["matched","fun KClass<ViewGroup.LayoutParams>.matched(): ViewGroup.LayoutParams","sp.ax.ui.view.group.matched"]},{"name":"fun KClass<ViewGroup.LayoutParams>.wrapped(): ViewGroup.LayoutParams","description":"sp.ax.ui.view.group.wrapped","location":"-android-extension.-user-interface/sp.ax.ui.view.group/wrapped.html","searchKeys":["wrapped","fun KClass<ViewGroup.LayoutParams>.wrapped(): ViewGroup.LayoutParams","sp.ax.ui.view.group.wrapped"]},{"name":"fun KClass<ViewGroup>.layoutParams(size: Int): ViewGroup.LayoutParams","description":"sp.ax.ui.view.group.layoutParams","location":"-android-extension.-user-interface/sp.ax.ui.view.group/layout-params.html","searchKeys":["layoutParams","fun KClass<ViewGroup>.layoutParams(size: Int): ViewGroup.LayoutParams","sp.ax.ui.view.group.layoutParams"]},{"name":"fun KClass<ViewGroup>.layoutParams(width: Int, height: Int): ViewGroup.LayoutParams","description":"sp.ax.ui.view.group.layoutParams","location":"-android-extension.-user-interface/sp.ax.ui.view.group/layout-params.html","searchKeys":["layoutParams","fun KClass<ViewGroup>.layoutParams(width: Int, height: Int): ViewGroup.LayoutParams","sp.ax.ui.view.group.layoutParams"]},{"name":"fun View.getPadding(): Padding","description":"sp.ax.ui.view.getPadding","location":"-android-extension.-user-interface/sp.ax.ui.view/get-padding.html","searchKeys":["getPadding","fun View.getPadding(): Padding","sp.ax.ui.view.getPadding"]},{"name":"fun View.setPadding(padding: Padding)","description":"sp.ax.ui.view.setPadding","location":"-android-extension.-user-interface/sp.ax.ui.view/set-padding.html","searchKeys":["setPadding","fun View.setPadding(padding: Padding)","sp.ax.ui.view.setPadding"]},{"name":"fun View.updatePadding(left: Int = paddingLeft, top: Int = paddingTop, right: Int = paddingRight, bottom: Int = paddingBottom)","description":"sp.ax.ui.view.updatePadding","location":"-android-extension.-user-interface/sp.ax.ui.view/update-padding.html","searchKeys":["updatePadding","fun View.updatePadding(left: Int = paddingLeft, top: Int = paddingTop, right: Int = paddingRight, bottom: Int = paddingBottom)","sp.ax.ui.view.updatePadding"]},{"name":"fun Visibility.asViewValue(): Int","description":"sp.ax.ui.entity.asViewValue","location":"-android-extension.-user-interface/sp.ax.ui.entity/as-view-value.html","searchKeys":["asViewValue","fun Visibility.asViewValue(): Int","sp.ax.ui.entity.asViewValue"]},{"name":"fun padding(left: Int = 0, top: Int = 0, right: Int = 0, bottom: Int = 0): Padding","description":"sp.ax.ui.entity.padding","location":"-android-extension.-user-interface/sp.ax.ui.entity/padding.html","searchKeys":["padding","fun padding(left: Int = 0, top: Int = 0, right: Int = 0, bottom: Int = 0): Padding","sp.ax.ui.entity.padding"]},{"name":"fun view(context: Context, layoutParams: ViewGroup.LayoutParams = ViewDefault.layoutParams, id: Int = ViewDefault.id, background: Drawable = ViewDefault.background, visibility: Visibility = ViewDefault.visibility, padding: Padding = ViewDefault.padding, onClick: () -> Unit = ViewDefault.onClick, onLongClick: () -> Boolean = ViewDefault.onLongClick, isClickable: Boolean = onClick !== ViewDefault.onClick, isLongClickable: Boolean = onLongClick !== ViewDefault.onLongClick, keepScreenOn: Boolean = ViewDefault.keepScreenOn, block: View.() -> Unit = {}): View","description":"sp.ax.ui.view.view","location":"-android-extension.-user-interface/sp.ax.ui.view/view.html","searchKeys":["view","fun view(context: Context, layoutParams: ViewGroup.LayoutParams = ViewDefault.layoutParams, id: Int = ViewDefault.id, background: Drawable = ViewDefault.background, visibility: Visibility = ViewDefault.visibility, padding: Padding = ViewDefault.padding, onClick: () -> Unit = ViewDefault.onClick, onLongClick: () -> Boolean = ViewDefault.onLongClick, isClickable: Boolean = onClick !== ViewDefault.onClick, isLongClickable: Boolean = onLongClick !== ViewDefault.onLongClick, keepScreenOn: Boolean = ViewDefault.keepScreenOn, block: View.() -> Unit = {}): View","sp.ax.ui.view.view"]},{"name":"interface Padding","description":"sp.ax.ui.entity.Padding","location":"-android-extension.-user-interface/sp.ax.ui.entity/-padding/index.html","searchKeys":["Padding","interface Padding","sp.ax.ui.entity.Padding"]}]
